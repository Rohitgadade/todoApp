{"version":3,"sources":["store/actionTypes/index.js","components/TodoEdit.js","store/actions/index.js","components/TodoList.js","components/TodoAdd.js","App.js","reportWebVitals.js","store/reducers/index.js","store/index.js","index.js"],"names":["ADD_TODOS","DELETE_TODOS","UPDATE_TODOS","TodoEdit","data","useSelector","state","dispatch","useDispatch","useState","editname","setEditName","id","useParams","currTodo","find","curr","parseInt","useEffect","todos","style","listStyle","textAlign","filter","el","map","className","type","name","value","onChange","e","target","required","to","onClick","payload","update_Todos","TodoList","isEdit","setEdit","delete_Todos","TodoAdd","input","setInput","onSubmit","preventDefault","length","placeholder","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","Object","assign","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5b6fc9.chunk.js","sourcesContent":["export const ADD_TODOS = \"ADD_TODOS\";\nexport const DELETE_TODOS = \"DELETE_TODOS\";\nexport const UPDATE_TODOS = \"UPDATE_TODOS\";\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { update_Todos } from \"../store/actions\";\n\nexport const TodoEdit = () => {\n  const data = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [editname, setEditName] = useState(\"\");\n  const { id } = useParams();\n  // console.log(\"id,\", id);\n  const currTodo = data.find((curr) => curr.id === parseInt(id));\n  // console.log(\"currTodo\", currTodo);\n  useEffect(()=>{\n    if(currTodo){\n      setEditName(currTodo.todos)\n    }\n  },[currTodo])\n\n  return (\n    <div>\n      {currTodo ? (\n        <ul style={{ listStyle: \"none\", textAlign: \"center\" }}>\n          {data\n            .filter((el) => el.id === parseInt(id))\n            .map((el, id) => {\n              return (\n                <div key={id}>\n                  <li>\n                    <div className=\"row justify-content-md-center mt-5 \">\n                      <div className=\"col-md-auto mt-1\">{el.todos}</div>\n                      <div className=\"col-md-auto\">\n                        <input\n                          type=\"text\"\n                          name=\"editname\"\n                          value={editname}\n                          onChange={(e) => setEditName(e.target.value)}\n                          className=\"form-control mb-2\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"col col-lg-4 btn-group\">\n                        <div className=\"col col-lg-4\">\n                          {editname === \"\" ? <Link to=\"/\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-info\"\n                            >\n                              Update\n                            </button>\n                          </Link> : <Link to=\"/\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-info\"\n                              onClick={() => {\n                                dispatch(\n                                  update_Todos({\n                                    id: el.id,\n                                    todos: editname,\n                                  })\n                                )\n                              }\n                              }\n                            >\n                              Update\n                            </button>\n                          </Link>}\n                        </div>\n                        <div className=\"col col-lg-2\">\n                          <Link to=\"/\">\n                            <button type=\"button\" className=\"btn btn-dark\">\n                              Cancel\n                            </button>\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </div>\n              );\n            })}\n        </ul>\n      ) : (\n        <p>Not valid id</p>\n      )}\n    </div>\n  );\n};\n","import { ADD_TODOS, DELETE_TODOS, UPDATE_TODOS } from \"../actionTypes\";\n\nexport const add_Todos = (todos) => ({\n  type: ADD_TODOS,\n  payload: todos,\n});\n\nexport const delete_Todos = (id) => ({\n  type: DELETE_TODOS,\n  payload: id,\n});\n\nexport const update_Todos = (id, todos) => ({\n  type: UPDATE_TODOS,\n  payload: id,\n  todos,\n});\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { delete_Todos } from \"../store/actions\";\nimport { TodoEdit } from \"./TodoEdit\";\n\nexport const TodoList = () => {\n  const data = useSelector((state) => state);\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {!isEdit ? (\n        data.map((el, id) => {\n          return (\n            <div key={id}>\n              <div className=\"row justify-content-md-center mt-2\">\n                <div className=\"col \">\n                  <div className=\"list-group list-group-horizontal\">\n                    <p className=\"list-group-item mb-2 \">{el.todos}</p>\n                  </div>\n                </div>\n                <div className=\"col col-lg-3 btn-group \">\n                  <div className=\"col col-lg-3\">\n                    <Link to={`/todoedit/${el.id}`}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-warning\"\n                        onClick={() => {\n                          setEdit(true);\n                        }}\n                      >\n                        Edit\n                      </button>\n                    </Link>\n                  </div>\n                  <div className=\"col col-lg-5\">\n                    <button\n                      type=\"button\"\n                      onClick={() => dispatch(delete_Todos(el.id))}\n                      className=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <TodoEdit />\n      )}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, {useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { add_Todos } from \"../store/actions\";\nimport TodoList from \"./TodoList\";\n\nexport const TodoAdd = () => {\n  const data = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState([]);\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      add_Todos({\n        id: data.length > 0 ? data[data.length - 1].id + 1 : 0,\n        todos: input,\n      })\n    );\n    setInput(\"\");\n\n  };\n\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"row justify-content-md-center mt-5 \">\n          <div className=\"col-md-auto mt-2\">\n            <h6>Total todos : {data.length}</h6>\n          </div>\n          <div className=\"col-md-auto\">\n            <input\n              type=\"text\"\n              name=\"input\"\n              placeholder=\"Enter todos...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              className=\"form-control mb-2\"\n              required\n            />\n          </div>\n          <div className=\"col-md-auto\">\n            <button type=\"submit\" className=\"btn btn-primary mb-2\">\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n      {data.length === 0 ? (\n        <h4 className=\"mb-5 mt-5 text-center\">Please add first todo task</h4>\n      ) : (\n        <TodoList />\n      )}\n    </div>\n  );\n};\n\nexport default TodoAdd;\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { TodoEdit } from \"./components/TodoEdit\";\nimport TodoAdd from \"./components/TodoAdd\";\n\nfunction App() {\n  return (\n    <div className=\"container justify-content-md-center p-2 mb-2 bg-light text-dark\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={() => <TodoAdd />} />\n          <Route path=\"/todoedit/:id\" exact component={() => <TodoEdit />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TODOS, DELETE_TODOS, UPDATE_TODOS } from \"../actionTypes\";\n\nconst initialState = [\n  // {\n  //   id: 1,\n  //   todos: \"Get up early morning\",\n  // },\n  // {\n  //   id: 2,\n  //   todos: \"Travelling to Delhi\",\n  // },\n  // {\n  //   id: 3,\n  //   todos: \"Call to friend\",\n  // },\n];\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODOS:\n      state = [...state, action.payload];\n      return state;\n    case DELETE_TODOS:\n      const delete_Todos = state.filter((el) =>\n        el.id === action.payload ? null : el\n      );\n      state = delete_Todos;\n      return state;\n    case UPDATE_TODOS:\n      const update_Todos = state.filter((el) =>\n        el.id === action.payload.id \n          ? Object.assign(el, { todos: action.payload.todos })\n          : el\n      );\n\n      // console.log(\"update state\", update_Todos);\n      // console.log(\"action.payload.id\", action.payload);\n      state = update_Todos;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store/index.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}